name: Build and Push Image

on:
  push:
    branches: [ "main" ]
    tags:
      - '*'
  schedule:
    - cron: '0 0 1 * *'  # This will automatically run this workflow at 00:00 UTC on the first day of every month
  workflow_dispatch:
  pull_request:
    branches: [ "main" ]
    paths:
      - recipe.yml
      - .github/workflows/image.yml

env:
  BUILDX_NO_DEFAULT_ATTESTATIONS: 1 # Disable provenance

jobs:
  image:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Additional permissions for persistance of attestations
      contents: read
      packages: write # To push to GHCR
      attestations: write # To create and write attestations

    steps:
    - uses: actions/checkout@v4

    - uses: vanilla-os/vib-gh-action@v0.7.0 # Build the recipe using Vib
      with:
        recipe: 'recipe.yml'

    - uses: actions/upload-artifact@v4 # Upload the built Containerfile for debugging
      with:
        name: Containerfile
        path: Containerfile

    - name: Generate image name
      run: |
        REPO_OWNER_LOWERCASE="$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')"
        echo "REPO_OWNER_LOWERCASE=$REPO_OWNER_LOWERCASE" >> "$GITHUB_ENV"
        echo "IMAGE_NAME=ghcr.io/$REPO_OWNER_LOWERCASE/dev-image" >> "$GITHUB_ENV"

    - name: Docker meta # Generate tags
      id: docker_meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ env. IMAGE_NAME }}
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{raw}}
          type=semver,pattern=v{{major}}
          type=ref,event=branch

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
  
    - name: Build and push image
      id: push-ghcr
      uses: docker/build-push-action@v5.3.0
      with:
        context: .
        file: Containerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
        platforms: linux/amd64, linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max
        provenance: false
    
    - uses: sigstore/cosign-installer@v3.5.0
    - name: Sign container image
      if: github.repository == 'kbdharun/dev-image' && github.event_name != 'pull_request'
      run: |
        cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ steps.docker_meta.outputs.tags }}
      env:
        COSIGN_EXPERIMENTAL: false
        COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}

    - name: Attest pushed image
      uses: actions/attest-build-provenance@v1
      id: attest
      if: github.repository == 'kbdharun/dev-image' && github.event_name != 'pull_request'
      with:
        subject-name: ghcr.io/${{ github.actor }}/${{ env.IMAGE_NAME }}
        subject-digest: ${{ steps.push-ghcr.outputs.digest }}
        push-to-registry: false
